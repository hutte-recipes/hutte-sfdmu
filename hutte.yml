version: "1.0"

# Shell script to run when pushing the source code to the scratch orgs.
# It's a great place to automate tasks like permission set assignments or data loading.
push_script: |
  set -euo pipefail # fail fast
  sf project deploy start

custom_scripts:
  # This scripts will be displayed on the scratch org's page
  scratch_org: &custom_scripts
    "Commit Data":
      description: "Commit data into Git using SFDMU"
      run: |
        set -e
        cp data/template-export.json "$HUTTE_INPUT_destinationfolder/export.json"
        # If it contains "LIMIT", use the query as is, otherwise add LIMIT 10 to avoid accidental commit of several data records
        if [[ "$HUTTE_INPUT_soql" =~ [Ll][Ii][Mm][Ii][Tt] ]]; then
            soql="$HUTTE_INPUT_soql"
        else
            soql="$HUTTE_INPUT_soql LIMIT 10"
        fi
        escaped_soql=$(printf '%s\n' "$soql" | sed 's/[&/\]/\\&/g')
        sed -i "s|<insertQuery>|$escaped_soql|g" "$HUTTE_INPUT_destinationfolder/export.json"
        cat "$HUTTE_INPUT_destinationfolder/export.json"
        cd $HUTTE_INPUT_destinationfolder
        echo y | sf plugins install sfdmu
        sf sfdmu run --sourceusername "${SALESFORCE_USERNAME}" --targetusername csvfile --filelog 0 -n
        git add . && git commit -m "$HUTTE_INPUT_commitmessage" && git push origin "${HUTTE_GIT_SOURCE_BRANCH}"
      inputs:
        soql:
          label: "Data SOQL"
          description: "Specify the SOQL that returns the data to commit, including the more relevant fields and filters. Note: If you don't include a LIMIT, default 'LIMIT 10' will be used as security measure."
          type: string
          default: "SELECT Id FROM Account LIMIT 10"
          required: true
        destinationfolder:
          label: "Destination Folder"
          description: "Choose the repository folder where you'd like to commit the data records."
          type: choice
          default: "data/qa-data"
          required: true
          options:
            - data/development-baseline-data
            - data/qa-data
            - data/package-configuration-data
        commitmessage:
          label: "Git Commit Message"
          type: string
          required: true
    "Import Data":
      description: "Import data using SFDMU"
      run: |
        cp $HUTTE_INPUT_sourcefolder/data-import.json $HUTTE_INPUT_sourcefolder/export.json
        echo y | sf plugins install sfdmu
        sf sfdmu run -p $HUTTE_INPUT_sourcefolder -s csvfile -u "${SALESFORCE_USERNAME}" --filelog 0 -n
      inputs:
        sourcefolder:
          label: "Source Folder"
          description: "Choose the repository folder to load data from."
          type: choice
          default: "data/qa-data"
          required: true
          options:
            - data/development-baseline-data
            - data/qa-data
            - data/package-configuration-data
  sandbox: *custom_scripts
